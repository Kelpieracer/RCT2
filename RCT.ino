/*
    Name:       RCT.ino
    Created:	01-Jul-18 10:40:31
    Author:     Tapio Mäntysalo
*/
//#include <ir_Lego_PF_BitStreamEncoder.h>
//#include <IRremoteInt.h>
//#include <boarddefs.h>
#include "timer.h"
#include <IRremote.h>

#define SENSORS 20
#define FIRST_SENSOR_IN_USE 0
#define LAST_SENSOR_IN_USE 17
#define SENSOR_FAIL 0
#define SENSOR_COVERED 1
#define SENSOR_SEES 2

#define MODE_TEST 0
#define MODE_2ON2OFF 1
#define MODE_RC 2
#define MODE_MUTE 3

static char mode = MODE_RC;

byte sensorStates[SENSORS];

byte TODOS[] = { B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111 };
byte EX[] = { B00000000,B00010000,B00010000,B00010000,B00010000,B00000000,B00010000,B00000000 };
byte A[] = { B00000000,B00011000,B00100100,B00100100,B00111100,B00100100,B00100100,B00000000 };
byte B[] = { B01111000,B01001000,B01001000,B01110000,B01001000,B01000100,B01000100,B01111100 };
byte C[] = { B00000000,B00011110,B00100000,B01000000,B01000000,B01000000,B00100000,B00011110 };
byte D[] = { B00000000,B00111000,B00100100,B00100010,B00100010,B00100100,B00111000,B00000000 };
byte E[] = { B00000000,B00111100,B00100000,B00111000,B00100000,B00100000,B00111100,B00000000 };
byte F[] = { B00000000,B00111100,B00100000,B00111000,B00100000,B00100000,B00100000,B00000000 };
byte G[] = { B00000000,B00111110,B00100000,B00100000,B00101110,B00100010,B00111110,B00000000 };
byte H[] = { B00000000,B00100100,B00100100,B00111100,B00100100,B00100100,B00100100,B00000000 };
byte I[] = { B00000000,B00111000,B00010000,B00010000,B00010000,B00010000,B00111000,B00000000 };
byte J[] = { B00000000,B00011100,B00001000,B00001000,B00001000,B00101000,B00111000,B00000000 };
byte K[] = { B00000000,B00100100,B00101000,B00110000,B00101000,B00100100,B00100100,B00000000 };
byte L[] = { B00000000,B00100000,B00100000,B00100000,B00100000,B00100000,B00111100,B00000000 };
byte M[] = { B00000000,B00000000,B01000100,B10101010,B10010010,B10000010,B10000010,B00000000 };
byte N[] = { B00000000,B00100010,B00110010,B00101010,B00100110,B00100010,B00000000,B00000000 };
byte O[] = { B00000000,B00111100,B01000010,B01000010,B01000010,B01000010,B00111100,B00000000 };
byte P[] = { B00000000,B00111000,B00100100,B00100100,B00111000,B00100000,B00100000,B00000000 };
byte Q[] = { B00000000,B00111100,B01000010,B01000010,B01000010,B01000110,B00111110,B00000001 };
byte R[] = { B00000000,B00111000,B00100100,B00100100,B00111000,B00100100,B00100100,B00000000 };
byte S[] = { B00000000,B00111100,B00100000,B00111100,B00000100,B00000100,B00111100,B00000000 };
byte T[] = { B00000000,B01111100,B00010000,B00010000,B00010000,B00010000,B00010000,B00000000 };
byte U[] = { B00000000,B01000010,B01000010,B01000010,B01000010,B00100100,B00011000,B00000000 };
byte V[] = { B00000000,B00100010,B00100010,B00100010,B00010100,B00010100,B00001000,B00000000 };
byte W[] = { B00000000,B10000010,B10010010,B01010100,B01010100,B00101000,B00000000,B00000000 };
byte X[] = { B00000000,B01000010,B00100100,B00011000,B00011000,B00100100,B01000010,B00000000 };
byte Y[] = { B00000000,B01000100,B00101000,B00010000,B00010000,B00010000,B00010000,B00000000 };
byte Z[] = { B00000000,B00111100,B00000100,B00001000,B00010000,B00100000,B00111100,B00000000 };

byte _2[] = { B00000000, B00111000, B01000100, B00000100, B00111000, B01000000, B01000000, B01111100 };

byte CLEAR[] = { B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000 };

#include <avr/pgmspace.h>

#define SerialPrintf(fmt, ...) _SerialPrintf(PSTR(fmt), ##__VA_ARGS__)
#define NullPrintf(fmt, ...) 

extern "C" {
	int serialputc(char c, FILE *fp)
	{
		if (c == '\n')
			Serial.write('\r');
		Serial.write(c);
	}
}


void _SerialPrintf(const char *fmt, ...)
{
	FILE stdiostr;
	va_list ap;

	fdev_setup_stream(&stdiostr, serialputc, NULL, _FDEV_SETUP_WRITE);

	va_start(ap, fmt);
	vfprintf_P(&stdiostr, fmt, ap);
	va_end(ap);
}

/*
* map Printf() to SerialPrintf()
* (Can't use printf() as the IDE uses it to include stdio.h and then our define would create problems. )
*/

#define Printf SerialPrintf

/*
* To use it for debugging define something like this:
*/
#define Debug SerialPrintf
